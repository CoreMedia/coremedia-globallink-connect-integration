name: Deploy Website to GitHub Pages

on:
  workflow_dispatch: {}
  workflow_call: {}
  # Only run when merging closed pull-requests.
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - website/**

# Restrict permissions to minimal required set
permissions:
  contents: read # Required for actions/checkout

env:
  # https://github.com/actions/runner-images/issues/70
  NODE_OPTIONS: "--max_old_space_size=4096"
  NODE_VERSION: 22
  PNPM_VERSION: 10.9

jobs:
  # Only run, when merging from `maintenance/*` branches. This matches the
  # development flow as introduced in August 2025 and may require to be adapted,
  # if we decide differently. Goal: Only publish the "latest approved version"
  # rather than an intermediate state while preparing the next release.
  check-source-branch:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - id: check
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
          PR_MERGED: ${{ github.event.pull_request.merged }}
        run: |
          if [[ "$PR_MERGED" == "true" && "$HEAD_REF" =~ ^maintenance/ ]]; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          else
            echo "should-deploy=false" >> $GITHUB_OUTPUT
          fi
  env:
    needs: check-source-branch
    if: needs.check-source-branch.outputs.should-deploy == 'true'
    uses: "./.github/workflows/env.yml"
  build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    needs:
      - env
      - check-source-branch
    if: needs.check-source-branch.outputs.should-deploy == 'true'
    env:
      NPM_HOST: ${{ needs.env.outputs.npm-host }}
      NPM_URL: ${{ needs.env.outputs.npm-url }}
    # Build job only needs to read repository contents
    permissions:
      contents: read
    steps:
      - id: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - id: setup-npmrc
        name: "Setup NPM Authentication"
        run: |
          # Get token
          token=$(curl -s -H "Accept: application/json" -H "Content-Type:application/json" \
            -X PUT --data '{"name": "${{ secrets.CM_NPM_USER }}", "password": "${{ secrets.CM_NPM_READ_ONLY_PASSWORD }}"}' \
            "${{ env.NPM_URL }}/-/user/org.couchdb.user:${{ secrets.CM_NPM_USER }}" | jq -r .token)

          # Create .npmrc in home directory (safer than repo root)
          cat > ~/.npmrc << EOF
          //${{ env.NPM_HOST }}/:_authToken=${token}
          @coremedia:registry=${{ env.NPM_URL }}
          EOF

          # Ensure token is masked
          echo "::add-mask::${token}"
      - id: installPnpm
        name: "Install: Use PNPM ${{ env.PNPM_VERSION }}"
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
      - id: installNodeJs
        name: "Install: Use Node.js ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "website/pnpm-lock.yaml"
      - id: install
        name: Install
        run: |
          cd website
          pnpm install --frozen-lockfile
      - id: build
        name: Build website
        run: |
          cd website
          pnpm run build
      - id: upload
        name: Upload Build Artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: website/build

  deploy:
    name: Deploy to GitHub Pages
    needs:
      - build
      - check-source-branch
    if: needs.check-source-branch.outputs.should-deploy == 'true'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read # Required for the deployment action
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - id: deployment
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
