name: Test Website Deployment

on:
  workflow_dispatch: {}
  workflow_call: {}
  pull_request:
    branches:
      - main
    paths:
      - website/**

# Restrict permissions to minimal required set
permissions:
  contents: read # Required for actions/checkout

env:
  # https://github.com/actions/runner-images/issues/70
  NODE_OPTIONS: "--max_old_space_size=4096"
  NODE_VERSION: 22
  PNPM_VERSION: 10.9

jobs:
  env:
    uses: "./.github/workflows/env.yml"
  test-deploy:
    name: Test deployment
    runs-on: ubuntu-latest
    needs:
      - env
    env:
      NPM_HOST: ${{ needs.env.outputs.npm-host }}
      NPM_URL: ${{ needs.env.outputs.npm-url }}
    # Test deploy job only needs to read repository contents
    permissions:
      contents: read
    if: github.event.pull_request.draft == false
    steps:
      - id: authorize
        name: "NPM Authorization"
        run: |
          result=$(curl -s -H "Accept: application/json" -H "Content-Type:application/json" -X PUT --data '{"name": "${{ secrets.CM_NPM_USER }}", "password": "${{ secrets.CM_NPM_READ_ONLY_PASSWORD }}"}' "${{ env.NPM_URL }}/-/user/org.couchdb.user:${{ secrets.CM_NPM_USER }}" | jq -r .token)
          # Ensure, the token is not exposed in output.
          echo "::add-mask::${result}"
          echo "NPM_AUTH_TOKEN=${result}" >> $GITHUB_ENV
      - id: checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - id: npmrc
        name: "Init: .npmrc"
        run: |
          npmHost="${{ env.NPM_HOST }}"
          npmUrl="${{ env.NPM_URL }}"
          npmAuthToken="${{ env.NPM_AUTH_TOKEN }}"

          echo "//${npmHost}/:_authToken=${npmAuthToken}" >> .npmrc
          echo "@coremedia:registry=${npmUrl}" >> .npmrc
          # We must not commit this change.
          git update-index --assume-unchanged .npmrc
      - id: installPnpm
        name: "Install: Use PNPM ${{ env.PNPM_VERSION }}"
        uses: pnpm/action-setup@0c17529a66aca453f9227af23103ed11469b1e47 # v4.0.0
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
      - id: installNodeJs
        name: "Install: Use Node.js ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "website/pnpm-lock.yaml"
      - id: install
        name: Install
        run: |
          cd website
          pnpm install --frozen-lockfile
      - id: build
        name: Build website
        run: |
          cd website
          pnpm run build
