"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6211],{2244:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var t=o(9729);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}},4500:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"repository/documentation","title":"Documentation","description":"This project uses Docusaurus for generating and maintaining versioned documentation. Docusaurus is a modern static website generator that\'s particularly well-suited for technical documentation with features like versioning, internationalization, and search.","source":"@site/dev/repository/documentation.md","sourceDirName":"repository","slug":"/repository/documentation","permalink":"/coremedia-globallink-connect-integration/dev/repository/documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/CoreMedia/coremedia-globallink-connect-integration/tree/main/website/dev/repository/documentation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"dev","previous":{"title":"Branches","permalink":"/coremedia-globallink-connect-integration/dev/repository/branches"},"next":{"title":"Tags","permalink":"/coremedia-globallink-connect-integration/dev/repository/tags"}}');var i=o(5813),s=o(2244);const r={},a="Documentation",c={},d=[{value:"Documentation Workflow",id:"documentation-workflow",level:2},{value:"Documentation Versioning Strategy",id:"documentation-versioning-strategy",level:2},{value:"Major Version Documentation Only",id:"major-version-documentation-only",level:3},{value:"Documentation Update Process",id:"documentation-update-process",level:3},{value:"Benefits for Developers",id:"benefits-for-developers",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"documentation",children:"Documentation"})}),"\n",(0,i.jsxs)(n.p,{children:["This project uses ",(0,i.jsx)(n.a,{href:"https://docusaurus.io/",children:"Docusaurus"})," for generating and maintaining versioned documentation. Docusaurus is a modern static website generator that's particularly well-suited for technical documentation with features like versioning, internationalization, and search."]}),"\n",(0,i.jsx)(n.h2,{id:"documentation-workflow",children:"Documentation Workflow"}),"\n",(0,i.jsx)(n.p,{children:"The following diagram shows how documentation versions are managed and deployed:"}),"\n",(0,i.jsx)(n.mermaid,{value:'---\nconfig:\n  gitGraph:\n    mainBranchOrder: 1\n---\ngitGraph:\n  commit id: "ongoing dev"\n  commit id: "used third-party update 2406.x"\n  commit id: "doc snapshot 2406.x"\n  commit tag: "v2406.0.0-1"\n  branch release/2406.0\n  branch gh-pages order: 3\n  checkout gh-pages\n  commit id: "deploy 2406.x docs"\n  checkout main\n  commit id: "development"\n  commit id: "used third-party update 2412.x"\n  commit id: "doc snapshot 2412.x"\n  commit tag: "v2412.0.0-1"\n  branch release/2412.0\n  checkout gh-pages\n  commit id: "deploy 2412.x docs"\n  checkout main\n  commit id: "doc fixes"\n  checkout gh-pages\n  commit id: "update docs"\n  checkout main\n  commit id: "used third-party update 2506.x"\n  commit id: "doc snapshot 2506.x"\n  commit tag: "v2506.0.0-1"\n  branch release/2506.0\n  checkout gh-pages\n  commit id: "deploy 2506.x docs"\n  checkout main\n  commit id: "continue dev"'}),"\n",(0,i.jsx)(n.h2,{id:"documentation-versioning-strategy",children:"Documentation Versioning Strategy"}),"\n",(0,i.jsx)(n.h3,{id:"major-version-documentation-only",children:"Major Version Documentation Only"}),"\n",(0,i.jsxs)(n.p,{children:["Following Docusaurus best practices, we maintain versioned documentation only\nfor major versions (e.g., ",(0,i.jsx)(n.code,{children:"2406.x"}),", ",(0,i.jsx)(n.code,{children:"2412.x"}),", ",(0,i.jsx)(n.code,{children:"2506.x"}),"). This approach:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reduces build complexity"}),":\nEach documentation version increases build time and bundle size"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simplifies maintenance"}),":\nFewer versions to keep updated and consistent"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Focuses on significant changes"}),":\nMajor versions typically introduce substantial changes that warrant separate\ndocumentation"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Think of this approach as just another ",(0,i.jsx)(n.em,{children:"embedded Version Control System"}),". Thus,\non ",(0,i.jsx)(n.code,{children:"main"})," the ",(0,i.jsx)(n.em,{children:"documentation branches"})," will look like this:"]}),"\n",(0,i.jsx)(n.mermaid,{value:'---\ntitle: Embedded Documentation VCS\nconfig:\n  gitGraph:\n    mainBranchName: docs\n    showCommitLabel: false\n---\ngitGraph:\n  commit id: "prepare 2406.0.0 documentation"\n  commit id: "used third-party update 2406.0.0"\n  commit tag: "version-2406.x"\n  branch version-2406.x\n  commit\n  checkout docs\n  commit id: "prepare 2412.0.0 documentation"\n  commit id: "used third-party update 2412.0.0"\n  commit tag: "version-2412.x"\n  branch version-2412.x\n  commit\n  checkout version-2406.x\n  commit id: "adapt 2406.1.0 documentation"\n  checkout docs\n  commit id: "prepare 2506.0.0 documentation"\n  commit id: "used third-party update 2506.0.0"\n  commit tag: "version-2506.x"\n  branch version-2506.x\n  commit\n  checkout docs\n  commit id: "more commits"'}),"\n",(0,i.jsx)(n.h3,{id:"documentation-update-process",children:"Documentation Update Process"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["All documentation updates happen on ",(0,i.jsx)(n.code,{children:"main"})]}),": Whether fixing typos, updating\nprocedures for new approvals (like ",(0,i.jsx)(n.code,{children:"2406.1.0"}),"), or adding new features, all\nchanges must be made on the main branch."]}),"\n",(0,i.jsx)(n.p,{children:"This includes updating the overview of used third-party via"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mvn -Pdocs-third-party generate-resources\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This approach has a glitch: For updates on maintenance branches we will not\n(necessarily) update the used third-party overview (because all updates will\njust happen on the ",(0,i.jsx)(n.em,{children:"main"})," documentation branch). If you still want or need to\nupdate these reports, you have to manually apply them to the versioned\ndocumentation branch."]})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Release branches have static documentation"}),": Documentation sources on\n",(0,i.jsx)(n.code,{children:"release/"})," branches (e.g., ",(0,i.jsx)(n.code,{children:"release/2406.0"}),", ",(0,i.jsx)(n.code,{children:"release/2412.0"}),") are not\nmaintained after creation. They serve only for building the specific version\nreleases."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Versioned snapshots before major releases"}),": Before creating a new major\nrelease branch, a documentation version snapshot is created on main. This\ncaptures the documentation state for that major version."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["GitHub Pages deployment from ",(0,i.jsx)(n.code,{children:"main"})," only"]}),": The ",(0,i.jsx)(n.code,{children:"gh-pages"})," branch is updated\nexclusively from the main branch, which contains all version snapshots and\nserves as the single source of truth for documentation deployment."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"benefits-for-developers",children:"Benefits for Developers"}),"\n",(0,i.jsx)(n.p,{children:"This workflow ensures that:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Documentation improvements benefit all relevant versions"}),"\n",(0,i.jsx)(n.li,{children:"No need to cherry-pick documentation fixes across multiple branches"}),"\n",(0,i.jsx)(n.li,{children:"Clear separation between code releases and documentation maintenance"}),"\n",(0,i.jsx)(n.li,{children:"Consistent documentation experience across all deployed versions"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The future is yet to be designed. The more versions we ship, the more complex\nthe documentation will get. The suggestion is to archive not maintained versions\nlater, like not only removing the corresponding ",(0,i.jsx)(n.code,{children:"release/*"})," branch, but also\nremoving the versioned documentation. For now, refer to the official Docusaurus\ndocumentation, how to proceed with this scenario (and think about updating\nthis documentation)."]})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);