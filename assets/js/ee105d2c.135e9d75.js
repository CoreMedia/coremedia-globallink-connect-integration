"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[852],{2244:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(9729);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}},9503:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"release/steps/introduction","title":"Introduction","description":"Overview and Introduction to Major/Minor Release","source":"@site/dev/release/steps/00-introduction.md","sourceDirName":"release/steps","slug":"/release/steps/introduction","permalink":"/coremedia-globallink-connect-integration/dev/release/steps/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/CoreMedia/coremedia-globallink-connect-integration/tree/main/website/dev/release/steps/00-introduction.md","tags":[{"inline":true,"label":"development","permalink":"/coremedia-globallink-connect-integration/dev/tags/development"},{"inline":true,"label":"contributors","permalink":"/coremedia-globallink-connect-integration/dev/tags/contributors"},{"inline":true,"label":"release","permalink":"/coremedia-globallink-connect-integration/dev/tags/release"}],"version":"current","sidebarPosition":0,"frontMatter":{"description":"Overview and Introduction to Major/Minor Release","tags":["development","contributors","release"]},"sidebar":"dev","previous":{"title":"Release Steps","permalink":"/coremedia-globallink-connect-integration/dev/category/release-steps"},"next":{"title":"Create Branch","permalink":"/coremedia-globallink-connect-integration/dev/release/steps/create-branch"}}');var r=t(5813),i=t(2244);const s={description:"Overview and Introduction to Major/Minor Release",tags:["development","contributors","release"]},a="Introduction",c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Starting in August 2025, we dropped the ",(0,r.jsx)(n.em,{children:"Git Flow"}),"  based process in favor\nof having parallel maintenance version branches."]})}),"\n",(0,r.jsxs)(n.admonition,{title:"TL;DR",type:"tip",children:[(0,r.jsx)(n.p,{children:"For the following we use two scenarios:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Release approval for ",(0,r.jsx)(n.em,{children:"major"})," version 2506.0 (starting from ",(0,r.jsx)(n.code,{children:"main"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Release approval for ",(0,r.jsx)(n.em,{children:"minor"})," version 2406.1 (starting from ",(0,r.jsx)(n.code,{children:"release/2406.0"}),")."]}),"\n"]})]}),"\n",(0,r.jsx)(n.p,{children:"This section will guide you through a typical development, approval and\nrelease process. We will guide you in parallel through the approve and\nrelease process for a CMCC major version, as well as for a CMCC minor version."}),"\n",(0,r.jsxs)(n.p,{children:["Each step will be guided by Git Graphs (powered by\n",(0,r.jsx)(n.a,{href:"https://mermaid.js.org/",title:"Mermaid | Diagramming and charting tool",children:"Mermaid"}),").\nAs also the documentation contains a concept of ",(0,r.jsx)(n.em,{children:"branches"}),"\n(see ",(0,r.jsx)(n.a,{href:"https://docusaurus.io/docs/versioning",children:"Versioning | Docusaurus"}),"), Git\nGraphs also exists for these, where applicable."]}),"\n",(0,r.jsx)(n.p,{children:"For the following description, we expect the following starting points\nregarding the Git and documentation perspective."}),"\n",(0,r.jsx)(n.mermaid,{value:'---\ntitle: "Git Perspective"\nconfig:\n  theme: \'default\'\n---\ngitGraph:\n  commit\n  commit\n  branch "release/2406.0"\n  commit\n  commit tag: "v2406.0.0-1"\n  checkout main\n  merge "release/2406.0"\n  commit\n  branch "release/2412.0"\n  commit\n  commit tag: "v2412.0.0-1"\n  checkout main\n  merge "release/2412.0"\n  commit'}),"\n",(0,r.jsx)(n.p,{children:"Thus, we have approved the GCC integration for versions CMCC v12.2406.0.0 and\nCMCC v12.2412.0.0. It is most likely, that the branch as well as the release\ntag point to the same commit for now. We still create the maintenance\nbranches in advance to simplify approval of subsequent versions."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Yet to be defined is a process to later archive branches for no longer\nsupported versions (which, referred to CMCC release cycle refers to any\nversion as soon as it reaches ",(0,r.jsx)(n.em,{children:"Extended Support"}),"). The assumption is that\nwe will just delete the branches, as a corresponding release-tag should always\nexist, that we can create the branch again from."]})}),"\n",(0,r.jsx)(n.mermaid,{value:"---\ntitle: Documentation Perspective\nconfig:\n  theme: 'forest'\n  gitGraph:\n    mainBranchName: 'docs'\n---\ngitGraph:\n  commit\n  commit\n  branch \"version-2406.x\"\n  commit\n  checkout docs\n  commit\n  branch \"version-2412.x\"\n  commit\n  checkout docs\n  commit"}),"\n",(0,r.jsxs)(n.p,{children:["As for the documentation we only create version specific documentation\nfor each major version, anonymized (",(0,r.jsx)(n.code,{children:"*.x"}),") versions got created for now."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["All documentation updates must eventually go to the ",(0,r.jsx)(n.code,{children:"origin/main"})," branch, as\n",(0,r.jsx)(n.code,{children:"gh-pages"})," will be only deployed from that branch. For a minor release, this\nrequires to set up two branches for one approval process, that later need to\nbe merged to different targets."]})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["Approvals done on a given branch like ",(0,r.jsx)(n.code,{children:"origin/main"})," must be performed in\nthe same order as releases in the CMS. Thus, if you happen to have a delay\nin your approval process, and ",(0,r.jsx)(n.code,{children:"2412.0.0"})," as well as ",(0,r.jsx)(n.code,{children:"2506.0.0"})," need to be\napproved, you must strictly stick to first approving ",(0,r.jsx)(n.code,{children:"2412.0.0"}),"."]})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);